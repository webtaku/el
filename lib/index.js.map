{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["type CustomTag = `${string}-${string}`;\n\ntype Tag = '' | keyof HTMLElementTagNameMap | CustomTag;\n\ntype Selector =\n  | Tag\n  | `${Tag}#${string}`\n  | `${Tag}.${string}`\n  | `${Tag}#${string}.${string}`;\n\ntype ElementByTag<T extends Tag | string> = (\n  T extends '' ? HTMLDivElement\n  : (\n    T extends keyof HTMLElementTagNameMap ? HTMLElementTagNameMap[T]\n    : HTMLElement\n  )\n);\n\ntype ElementBySelector<S extends Selector> = (\n  S extends '' ? HTMLDivElement\n  : (\n    S extends keyof HTMLElementTagNameMap ? HTMLElementTagNameMap[S]\n    : (\n      S extends `${infer T}#${string}` ? ElementByTag<T>\n      : (\n        S extends `${infer T}.${string}` ? ElementByTag<T>\n        : HTMLElement\n      )\n    )\n  )\n);\n\ntype ElementProps<S extends Selector> =\n  & Partial<Omit<ElementBySelector<S>, 'style'>>\n  & { style?: Partial<CSSStyleDeclaration> };\n\nfunction el<S extends Selector>(\n  selector: S = 'div' as S,\n  ...children: (HTMLElement | string | ElementProps<S> | undefined)[]\n): ElementBySelector<S> {\n  const parts = selector.split(/([#.])/);\n  const tag = parts[0] || 'div';\n  const el = document.createElement(tag);\n\n  for (let i = 1; i < parts.length; i += 2) {\n    const type = parts[i] as '#' | '.';\n    const value = parts[i + 1];\n    if (!value) continue;\n    if (type === '#') el.id = value;\n    else if (type === '.') el.classList.add(value);\n  }\n\n  const fragment = document.createDocumentFragment();\n\n  for (const child of children) {\n    if (child instanceof HTMLElement) {\n      fragment.appendChild(child);\n    } else if (typeof child === 'string') {\n      const lines = child.split('\\n');\n      for (let i = 0; i < lines.length; i++) {\n        if (i > 0) fragment.appendChild(document.createElement('br'));\n        const line = lines[i];\n        if (line) fragment.appendChild(document.createTextNode(line));\n      }\n    } else if (child) {\n      const attrs = child as ElementProps<S>;\n      for (const key in attrs) {\n        if (!Object.prototype.hasOwnProperty.call(attrs, key)) continue;\n\n        const value = (attrs as any)[key];\n        if (key === 'style' && typeof value === 'object') {\n          Object.assign(el.style, value);\n        } else if (key === 'dataset' && typeof value === 'object') {\n          Object.assign(el.dataset, value);\n        } else if (key === 'className') {\n          const classNames = value.split(/\\s+/);\n          for (const className of classNames) {\n            if (!className) continue;\n            el.classList.add(className);\n          }\n        } else if (key in el) {\n          (el as any)[key] = value;\n        } else {\n          el.setAttribute(key, String(value));\n        }\n      }\n    }\n  }\n\n  el.appendChild(fragment);\n\n  return el as ElementBySelector<S>;\n}\n\nexport { el };\n"]}